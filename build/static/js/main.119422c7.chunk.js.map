{"version":3,"sources":["components/SplashScreen.tsx","components/Card.tsx","components/Playfield.tsx","components/EndScreen.tsx","App.tsx","index.tsx"],"names":["SplashScreen","_ref","onStartGame","_jsxs","className","children","_jsx","onClick","Card","cardNumber","isClicked","setIsClicked","useState","handleClick","Playfield","x","y","onEndGame","cards","Array","from","length","_","i","style","gridTemplateColumns","concat","map","card","EndScreen","onRestartGame","App","gameState","setGameState","startGame","endGame","restartGame","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"iRAkBeA,MAVmCC,IAAsB,IAArB,YAAEC,GAAaD,EAChE,OACEE,eAAA,OAAKC,UAAU,SAAQC,SAAA,CACrBC,cAAA,MAAAD,SAAI,6BACJC,cAAA,KAAAD,SAAG,2CACHC,cAAA,UAAQC,QAASL,EAAYG,SAAC,iBAC1B,E,YCeKG,MAdmBP,IAAqB,IAApB,WAAEQ,GAAYR,EAC/C,MAAOS,EAAWC,GAAgBC,oBAAS,GAM3C,OACET,eAAA,OAAKC,UAAU,OAAOG,QALJM,KAClBF,GAAa,EAAK,EAIyBN,SAAA,CAAC,QACpCI,EAAW,IAAEC,GAAa,YAC5B,ECFKI,MAboBb,IAA0B,IAAzB,EAAEc,EAAC,EAAEC,EAAC,UAAEC,GAAWhB,EACrD,MAAMiB,EAAQC,MAAMC,KAAK,CAAEC,OAAQN,EAAIC,IAAK,CAACM,EAAGC,IAAMA,EAAI,IAE1D,OACEpB,eAAA,OAAKC,UAAU,YAAYoB,MAAO,CAAEC,oBAAoB,UAADC,OAAYX,EAAC,WAAWV,SAAA,CAC5Ea,EAAMS,KAAKC,GACVtB,cAACE,EAAI,CAAYC,WAAYmB,GAAlBA,KAEbtB,cAAA,UAAQC,QAASU,EAAUZ,SAAC,eACxB,E,MCFKwB,MAV6B5B,IAAwB,IAAvB,cAAE6B,GAAe7B,EAC1D,OACIE,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACvBC,cAAA,MAAAD,SAAI,cACJC,cAAA,KAAAD,SAAG,wBACHC,cAAA,UAAQC,QAASuB,EAAczB,SAAC,iBAC9B,ECgBC0B,MAxBf,WACE,MAAOC,EAAWC,GAAgBrB,mBAAS,UAc3C,OACET,eAAA,OAAKC,UAAU,MAAKC,SAAA,CACH,WAAd2B,GAA0B1B,cAACN,EAAY,CAACE,YAd3BgC,KAChBD,EAAa,OAAO,IAcH,SAAdD,GAAwB1B,cAACQ,EAAS,CAACC,EAAG,EAAGC,EAAG,EAAGC,UAXpCkB,KACdF,EAAa,MAAM,IAWF,QAAdD,GAAuB1B,cAACuB,EAAS,CAACC,cARnBM,KAClBH,EAAa,SAAS,MAU1B,ECvBAI,IAASC,OACPhC,cAACiC,IAAMC,WAAU,CAAAnC,SACfC,cAACyB,EAAG,MAENU,SAASC,eAAe,Q","file":"static/js/main.119422c7.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Common.css';\nimport '../styles/SplashScreen.css';\n\ninterface SplashScreenProps {\n  onStartGame: () => void; // Prop function to start the game\n}\n\nconst SplashScreen: React.FC<SplashScreenProps> = ({ onStartGame }) => {\n  return (\n    <div className=\"screen\">\n      <h1>Welcome to My Game App!!</h1>\n      <p>This is the splash screen of the game.</p>\n      <button onClick={onStartGame}>Start Game</button>\n    </div>\n  );\n};\n\nexport default SplashScreen;","import React, { useState } from 'react';\nimport '../styles/Card.css';\n\ninterface CardProps {\n  /*\n    Each card should track the following:\n    - a number that represents the card\n    - the type of card which is used to check if two cards are a match\n    - the state of the card which is used to check if the card is flipped\n    - the state of the card which is used to check if the card is matched\n  */\n  cardNumber: number;\n\n}\n\nconst Card: React.FC<CardProps> = ({ cardNumber }) => {\n  const [isClicked, setIsClicked] = useState(false); // state to manage if card has been clicked\n\n  const handleClick = () => {\n    setIsClicked(true); // set isClicked to true when card is clicked\n  };\n\n  return (\n    <div className=\"card\" onClick={handleClick}>\n      Card {cardNumber} {isClicked && 'Clicked'}\n    </div>\n  );\n};\n\nexport default Card;","import React from 'react';\nimport '../styles/Playfield.css';\nimport Card from './Card'; // import the Card component\n\ninterface Props {\n  x: number;\n  y: number;\n  onEndGame: () => void; // Prop function to end the game\n}\n\nconst Playfield: React.FC<Props> = ({ x, y, onEndGame }) => {\n  const cards = Array.from({ length: x * y }, (_, i) => i + 1);\n\n  return (\n    <div className=\"playfield\" style={{ gridTemplateColumns: `repeat(${x}, 1fr)` }}>\n      {cards.map((card) => (\n        <Card key={card} cardNumber={card} />\n      ))}\n      <button onClick={onEndGame}>End Game</button>\n    </div>\n  );\n};\n\nexport default Playfield;","import React from 'react';\nimport '../styles/EndScreen.css';\n\ninterface EndScreenProps {\n    onRestartGame: () => void; // Prop function to restart the game\n}\n\nconst EndScreen: React.FC<EndScreenProps> = ({ onRestartGame }) => {\n    return (\n        <div className=\"end-screen\">\n            <h1>Game Over</h1>\n            <p>Thanks for playing!</p>\n            <button onClick={onRestartGame}>Play Again</button>\n        </div>\n    );\n};\n\nexport default EndScreen;","import { useState } from 'react';\nimport SplashScreen from './components/SplashScreen';\nimport Playfield from './components/Playfield'; // import the PlayField component\nimport EndScreen from './components/EndScreen'; // import the EndScreen component\n\nfunction App() {\n  const [gameState, setGameState] = useState('splash'); // state to manage the game state\n\n  const startGame = () => {\n    setGameState('play'); // set gameState to 'play' when game starts\n  };\n\n  const endGame = () => {\n    setGameState('end'); // set gameState to 'end' when game ends\n  };\n\n  const restartGame = () => {\n    setGameState('splash'); // set gameState to 'splash' when game restarts\n  };\n\n  return (\n    <div className=\"App\">\n      {gameState === 'splash' && <SplashScreen onStartGame={startGame} />}\n      {gameState === 'play' && <Playfield x={4} y={4} onEndGame={endGame} />}\n      {gameState === 'end' && <EndScreen onRestartGame={restartGame} />}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}